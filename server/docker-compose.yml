version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  remote-schema:
    build:
      context: remote-schema
      args:
        CLIENT_URL: http://localhost:6058
        REMOTE_SCHEMA_URL: http://localhost:8080
    command: nodemon src/index.js
    ports:
      - "8000:8080"
    volumes:
      - ./remote-schema:/server

  graphql-engine:
    image: hasura/graphql-engine:v2.6.1
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
      - "remote-schema"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: '{"jwk_url":"https://${AUTH0_DOMAIN}/.well-known/jwks.json","type":"RS256"}'
      HASURA_GRAPHQL_ACTIONS_HANDLER_WEBHOOK_BASEURL: http://remote-schema:8080/graphql

volumes:
  db_data:
